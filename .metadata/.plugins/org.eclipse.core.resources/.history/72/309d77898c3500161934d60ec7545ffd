import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;
import java.util.Properties;
import org.hibernate.*;
import org.hibernate.cfg.*;
import org.hibernate.service.*;

/**
 * Nicole Dahlquist
 * PROG3060 - Exercise 2
 * TeamDemo class that contains the main method
 */

public class TeamDemo {

	private static Connection conn;
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		if(conn == null){
			try {
				getConnection();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		  Session session = null;
		  SessionFactory sessionFactory = null;
		  ServiceRegistry serviceRegistry = null;

		    try {

		     /* We create a SessionFactory based on the hibernate.cfg.xml
		        file; then from a SessionFactory, we can create an individual
		        Session object. The Configuration object changed significantly with
		        Hibernate Version 4; examples from older sources will not work with 
		        Version 4 libraries. */

		    	Configuration configuration = new Configuration()
		    		// .addClass(Book.class)
		    		// .addResource("book.hbm.xml")
		    		.addResource("hibernate.cfg.xml")
		    		.setProperty("hibernate.dialect", "org.hibernate.dialect.DerbyDialect");
		    	configuration.configure();
		    	serviceRegistry = new ServiceRegistryBuilder().applySettings(configuration.getProperties()).buildServiceRegistry();        
		    	sessionFactory = configuration.buildSessionFactory(serviceRegistry);
		    	
		       session = sessionFactory.openSession();
		       List teams = session.createQuery("from Team t WHERE "
				+ "t.teamName = ? AND t.league = 'NHL'")
				.setString(1, "Chicago Blackhawks").list();
		       if (teams.isEmpty() != true) { 
		           System.out.println ("Teams: ");
		           for(int i=0; i < teams.size(); i++){
			           Team team = (Team)teams.get(i);
			           System.out.println (team.getLeague());
			           System.out.println (team.getSponsor());
			           System.out.println (team.getTeamID());
			           System.out.println (team.getTeamName());
			           System.out.println (team.getWebsite());
			           System.out.println (team.getAsstCoach());
			           System.out.println (team.getHeadCoach());
			           System.out.println (team.getManager());
			           System.out.println (team.getTrainer());
		           }
		        } else {
		           System.out.println ("No teams");
		        }
		    }
		    catch(Exception e){
		    	e.printStackTrace();
		    }
	}
	
	/**
	 * Tries to get a connection
	 * @throws SQLException
	 */
	public static void getConnection() throws SQLException {
		String userName = "ndahlquist";
		String password = "password";
		
		Properties connectionProps = new Properties();
		try {
			connectionProps.put("user", userName);
			connectionProps.put("password", password);
			if(conn == null) {
				conn = DriverManager.getConnection("jdbc:derby://localhost:1527/c:/Users/Nicole/DerbyLeagueDB/LeagueDB", connectionProps);
				//conn = DriverManager.getConnection("jdbc:derby://localhost:1527/G:/LeagueDB/leagueDB;", connectionProps);	
			}			
		}
		catch (Exception e){
			e.printStackTrace();
		}
	}

}

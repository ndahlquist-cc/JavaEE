/**
 * PROG3060 - Exercise 3
 * Nicole Dahlquist
 * Created: July 23, 2016
 * mainline.java
 * mainline class - contains the transaction and creates the output
 */

import java.util.ArrayList;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 * Insert a player into a team and then outputs the team's rosters
 * @author Nicole Dahlquist
 */
public class mainline {

	private static EntityManagerFactory emf;
	private static EntityManager em;
	
	public static void main(String[] args) {
		// initialize class objects
		Player player = new Player();
		Roster playerRoster = new Roster();
		Team team = new Team();
		
		// start JPA transaction
		getEntityManagerFactory();
		em= emf.createEntityManager();		
		em.getTransaction().begin();
		
		// get team
		team = em.find(Team.class, "LFS001");
		
		// set player 
		player.setFirstName("Nicole");
		player.setLastName("Dahlquist");
		em.persist(player);
		
		// set player's roster
		playerRoster.setPlayer(player);
		playerRoster.setJersey(33);
		playerRoster.setPosition("Goalie");
		playerRoster.setTeam(team);
		em.persist(playerRoster);
		
		// commit and close transaction
		em.getTransaction().commit();
		em.close();
		
		// get player information for Toronto Maple Leafs
		ArrayList<Roster> rosters = getRosters("Toronto Maple Leafs");
		for(Roster roster : rosters){
			System.out.println(roster.getJersey() + "\t" 
				+ roster.getPlayer().getFirstName() + " " + roster.getPlayer().getLastName()
				+ "\t\t" + roster.getPosition());
		}
	}
	
	/**
	 * attempts to get an entity manager factory from Persistence class
	 */
	private static void getEntityManagerFactory(){
		emf = null;
		emf = Persistence.createEntityManagerFactory("leagueDB");
	}

	/**
	 * get the rosters for the specified team
	 * @param teamName - the name of the team
	 * @return ArrayList<Roster> rosters - the rosters of the team
	 */
	private static ArrayList<Roster> getRosters(String teamName)
	{
		ArrayList<Roster> rosters = new ArrayList<Roster>();
		em = emf.createEntityManager();
		em.getTransaction().begin();
		rosters = (ArrayList<Roster>)em.createQuery("SELECT r FROM Roster r "
				+ "WHERE r.team.teamName = :teamName "
				+ "AND r.team.league = 'NHL' "
				+ "ORDER BY r.jersey")
			.setParameter("teamName", teamName).getResultList();	
		em.close();
		return rosters;
	}
}
